{% extends "base.html.twig" %}
{% block body %}
    <article>

        <div id="mapid" style="height: 400px"></div>
        <script>

            function getEmojiMarkerOption(emoji)
            {
                const size = 20;
                const iconOptions = {
                    iconSize: [size, size],
                    iconAnchor: [size/2, size*0.7],
                    className: 'mymarker',
                    html: emoji
                }
                return {
                    draggable: false,
                    icon: L.divIcon(iconOptions)
                }
            }



            var mymap = L.map('mapid').setView([0, 0], 2);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: '{{ mapbox_token }}'
            }).addTo(mymap);
            {% for key, round in game.rounds %}
                L.marker([{{round.lat}}, {{round.lng}}], getEmojiMarkerOption("ðŸŸ¢")).addTo(mymap);
                L.marker([{{game.guesses[key].lat}}, {{game.guesses[key].lng}}], getEmojiMarkerOption("ðŸ”µ")).addTo(mymap);
                L.polyline(
                    [
                        [{{round.lat }}, {{ round.lng }}],
                        [{{ game.guesses[key].lat }}, {{ game.guesses[key].lng }}]
                    ]).addTo(mymap)
            {% endfor %}
        </script>
    </article>
{% endblock %}